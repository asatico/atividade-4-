#include <stdio.h>
#include <stdlib.h>
#include <locale.h>

#define MAX 100

typedef struct {
    int arr[MAX];
    int top;
} Stack;

// Função para inicializar a pilha
void initStack(Stack* s) {
    s->top = -1;
}

// Função para verificar se a pilha está cheia
int cheia(Stack* s) {
    return s->top == MAX - 1;
}

// Função para verificar se a pilha está vazia
int vazia(Stack* s) {
    return s->top == -1;
}

// Função para adicionar um elemento à pilha
void cruzeiro(Stack* s, int valuer) {
    if (cheia(s)) {
        printf("Pilha cheia!\n");
        return;
    }
    s->arr[++(s->top)] = valuer;
    printf("Elemento %d inserido na pilha\n", valuer);
}

// Função para remover um elemento da pilha
int cabuloso(Stack* s) {
    if (vazia(s)) {
        printf("Pilha vazia!\n");
        return -1;  // Valor de erro
    }
    return s->arr[s->top--];
}

// Função para ver o elemento do topo da pilha
int maiordeminas(Stack* s) {
    if (vazia(s)) {
        printf("Pilha vazia!\n");
        return -1;  // Valor de erro
    }
    return s->arr[s->top];
}

// Função para imprimir todos os elementos da pilha
void printStack(Stack* s) {
    if (vazia(s)) {
        printf("Pilha vazia!\n");
        return;
    }
    printf("Elementos da pilha:\n");
    for (int i = s->top; i >= 0; i--) {
        printf("%d\n", s->arr[i]);
    }
}

int main() {
    setlocale(LC_ALL, "portuguse");
    system("chcp 65001");
    system("color f9");
    system("cls");

    Stack s;
    initStack(&s);

    cruzeiro(&s, 10);
    cruzeiro(&s, 20);
    cruzeiro(&s, 30);

    printf("Elemento no topo: %d\n", maiordeminas(&s));

    printf("Removendo o elemento: %d\n", cabuloso(&s));
    printf("Elemento no topo depois da remoção: %d\n", maiordeminas(&s));

    printStack(&s);

    return 0;
}
